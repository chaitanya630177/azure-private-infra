trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: Terraform-Infra-Vars

stages:
  - stage: Terraform_Init
    displayName: "Terraform Init"
    jobs:
      - job: Init
        steps:
          - task: TerraformInstaller@1
            displayName: "Install Terraform"
            inputs:
              terraformVersion: '1.7.0'

          - task: TerraformTaskV4@4
            displayName: "Terraform Init"
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
              backendServiceArm: 'MyServiceConnection'
              backendAzureRmResourceGroupName: 'tfstate-rg'
              backendAzureRmStorageAccountName: 'tfstateaccount'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'

  - stage: Terraform_Plan
    displayName: "Terraform Plan"
    dependsOn: Terraform_Init
    jobs:
      - job: Plan
        steps:
          - task: TerraformTaskV4@4
            displayName: "Terraform Plan"
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
              environmentServiceNameAzureRM: 'MyServiceConnection'
              commandOptions: '-out=tfplan'

  - stage: Terraform_Apply
    displayName: "Terraform Apply"
    dependsOn: Terraform_Plan
    condition: succeeded()
    jobs:
      - job: Apply
        steps:
          - task: TerraformTaskV4@4
            displayName: "Terraform Apply"
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
              environmentServiceNameAzureRM: 'MyServiceConnection'
              commandOptions: 'tfplan'
